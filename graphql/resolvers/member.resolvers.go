package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.66

import (
	"context"
	"spurt-cms/graphql/controller"
	"spurt-cms/graphql/model"
)

// MemberRegister is the resolver for the memberRegister field.
func (r *mutationResolver) MemberRegister(ctx context.Context, input model.MemberDetails, arguments *model.MemberArguments) (bool, error) {
	return controller.MemberRegister(ctx, &input, arguments)
}

// MemberCheckLogin is the resolver for the memberCheckLogin field.
func (r *mutationResolver) MemberCheckLogin(ctx context.Context, input model.MemberSignin) (*model.MemberCheckLoginResponse, error) {
	return controller.MemberLogin(ctx, &input)
}

// ForgotPassword is the resolver for the forgotPassword field.
func (r *mutationResolver) ForgotPassword(ctx context.Context, input model.MemberInfo) (*model.ForgotPasswordResponse, error) {
	return controller.ForgotPassword(ctx, &input)
}

// ResetPassword is the resolver for the resetPassword field.
func (r *mutationResolver) ResetPassword(ctx context.Context, input model.MemberResetpassInfo) (bool, error) {
	return controller.ResetPassword(ctx, &input)
}

// MemberSocialLogin is the resolver for the memberSocialLogin field.
func (r *mutationResolver) MemberSocialLogin(ctx context.Context, input model.SocialLoginInput) (*model.SocialLoginResponse, error) {
	return controller.MemberSocialLogin(ctx, &input)
}

// UpdateMemberProfile is the resolver for the updateMemberProfile field.
func (r *mutationResolver) UpdateMemberProfile(ctx context.Context, input model.UpdateMember) (*model.UpdatememberResponse, error) {
	return controller.UpdateMemberProfile(ctx, &input)
}

// MembersList is the resolver for the MembersList field.
func (r *queryResolver) MembersList(ctx context.Context, filter *model.Filter) (*model.MembersDetails, error) {
	return controller.MembersList(ctx, filter)
}

// MemberProfileDetails is the resolver for the MemberProfileDetails field.
func (r *queryResolver) MemberProfileDetails(ctx context.Context, id int) (*model.Members, error) {
	return controller.MemberProfileDetails(ctx, &id)
}

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//  - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//    it when you're done.
//  - You have helper methods in this file. Move them out to keep these resolver files clean.
/*
	func (r *mutationResolver) MemberCheckoutDetails(ctx context.Context, checkouts model.MemberCheckoutDetails) (string, error) {
	return controller.CreateCheckoutDetails(ctx, &checkouts)
}
func (r *queryResolver) MembershipLevelList(ctx context.Context, filter *model.Filter, tenantID *string) (*model.MemershipDetail, error) {
	return controller.MembershipLevelList(ctx, filter, tenantID)
	// panic(fmt.Errorf("not implemented: MembershipLevelList - MembershipLevelList"))
}
func (r *queryResolver) MembershipLevelDetails(ctx context.Context, subscriptionid *int, tenantID *string) (*model.MemershipDetail, error) {
	return controller.MembershipLevelDetails(ctx, subscriptionid, tenantID)

	// panic(fmt.Errorf("not implemented: MembershipLevelDetails - MembershipLevelDetails"))
}
func (r *queryResolver) Integration(ctx context.Context, tenantID *string) (*model.ListIntegration, error) {
	return controller.IntegrationList(ctx, tenantID)

	// panic(fmt.Errorf("not implemented: Integration - Integration"))
}
*/
