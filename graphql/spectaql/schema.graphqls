# GraphQL schema example
#
# https://gqlgen.com/getting-started/

directive @auth on FIELD_DEFINITION

scalar Time

scalar Any

scalar CustomString

type Channel{
	id:                  Int!
	channelName:         String!
	channelDescription:  String!
	slugName:            String!
	fieldGroupId:        Int!
	isActive:            Int!
	createdOn:           Time!
	createdBy:           Int!
    isDeleted:           Int!
	modifiedOn:          Time          
	modifiedBy:          Int  
	tenantId:            Int!                                            
}

type ChannelDetails{
    channellist: [Channel!]!
    count:       Int!
}

type ChannelEntryDetails{
	channelEntriesList:  [ChannelEntries!]!
	count:               Int!
}

type ChannelEntries{
	id:                   Int!
	title:                String! 
	slug:                 String! 
	description:          CustomString!
	userId:               Int!
	channelId:            Int!
	status:               Int!
	isActive:             Int!
	createdOn:            Time!
	createdBy:            Int!
	modifiedBy:           Int     
	modifiedOn:           Time 
	coverImage:           String!
	thumbnailImage:       String!
	metaTitle:            String!
	metaDescription:      String!
	keyword:              String!
	categoriesId:         String!
	relatedArticles:      String!
	featuredEntry:        Int!
	viewCount:            Int!
	author:               String
	sortOrder:            Int
	createTime:           Time
	publishedTime:        Time
	readingTime:          Int
	tags:                 String
	excerpt:              String
	imageAltTag:          String
	categories:           [[Category!]!]
	additionalFields:     AdditionalFields
	authorDetails:        Author
	memberProfile:        MemberProfile
	tenantId:             Int!
	contentChunk:         Chunk
}

type Author{
	id:                   Int! 
	firstName:            String!
	lastName:             String!
	email:                String!
	mobileNo:             String
	isActive:             Int
	profileImagePath:     String
	createdOn:            Time!
	createdBy:            Int! 
	modifiedOn:           Time
	modifiedBy:           Int 
	tenantId:             Int!
}

type AdditionalFields{
	sections:   [Section!]
	fields:     [Field!]
}

type Section{
	id:                Int!
	sectionName:       String!
	sectionTypeId:     Int!
	createdOn:         Time!
	createdBy:         Int!
	modifiedOn:        Time
	modifiedBY:        Int
	orderIndex:        Int!
	tenantId:          Int!
}

type Field{
	id:                Int!
	fieldName:         String!
	fieldTypeId:       Int!
	mandatoryField:    Int!
	optionExist:       Int!
	createdOn:         Time!
	createdBy:         Int!
	modifiedOn:        Time
	modifiedBY:        Int
	fieldDesc:         String!
	orderIndex:        Int!
	imagePath:         String!
	datetimeFormat:    String
	timeFormat:        String
	sectionParentId:   Int
	characterAllowed:  Int
	fieldTypeName:     String!
	fieldValue:        FieldValue
	fieldOptions:      [FieldOptions!]
	tenantId:          Int!
}

type FieldValue{
	id:                Int!
	fieldValue:        String!
	createdOn:         Time!
	createdBy:         Int!
	modifiedOn:        Time
	modifiedBY:        Int
	tenantId:          Int!
}

type FieldOptions{
	id:                Int!
	optionName:        String!
	optionValue:       String!
	createdOn:         Time!
	createdBy:         Int!
	modifiedOn:        Time
	modifiedBY:        Int
	tenantId:          Int!
}

type CountUpdate{
	count:      Int!
	status:     Boolean! 
}

type Chunk{
	data:       [String!]!
	length:     Int!
}

type MemberProfile{
	id:                Int!
	memberId:          Int!
	profileName:       String!
	profileSlug:       String!
	profilePage:       String
	memberDetails:     Any
	companyName:       String
	companyLocation:   String
	companyLogo:       String
	about:             String
	seoTitle:          String
	seoDescription:    String
	seoKeyword:        String
	linkedin:          String
	twitter:           String
	website:           String
	createdBy:         Int
	createdOn:         Time
	modifiedOn:        Time 
	modifiedBy:        Int 
	claimStatus:       Int 
	IsActive:          Int  
	tenantId:          Int! 
	claimDate:         Time
}

type MemberSettings {
  id:                  Int!
  allowRegistration:   Int!     
	memberLogin:         String!
	modifiedBy:          Int       
	modifiedOn:          Time 
	notificationUsers:   String!  
	tenantId:            Int!
}

type Category{
	id:                 Int!
	categoryName:       String!
	categorySlug:       String!
	description:        String!
	imagePath:          String!
	createdOn:          Time!
	createdBy:          Int!
	modifiedOn:         Time 
	modifiedBy:         Int       
	parentId:           Int!
	tenantId:           Int!
}

type CategoryDetails{
	categorylist: [Category!]!
	count:        Int!
}

type Query{
  ChannelList(filter: Filter,sort: Sort): ChannelDetails! @auth
	ChannelDetail(channelId: Int,channelSlug: String,isActive: Boolean): Channel @auth
	ChannelEntriesList(commonFilter: Filter,sort: Sort,entryFilter: EntriesFilter,AdditionalData: EntriesAdditionalData): ChannelEntryDetails! @auth
	ChannelEntryDetail(id: Int, slug: String,AdditionalData: EntriesAdditionalData): ChannelEntries! @auth
  CategoryList(categoryFilter: CategoryFilter,commonFilter: Filter): CategoryDetails! @auth
}

type Mutation{
	UpdateEntryViewCount(id: Int,slug: String): CountUpdate! @auth
  memberRegister(input: MemberDetails!,arguments: MemberArguments):Boolean!
}

input Filter{
	limit:     Int
	offset:    Int
	isActive:  Boolean
	keyword:   String
}

input EntriesFilter{
	channelId:           Int
	categoryId:          Int
	categorySlug:        String
	getChildCategories:  Boolean
	Status:              String
}

input EntriesAdditionalData{
	authorDetails:     Boolean
	memberProfile:     Boolean
	additionalFields:  Boolean
	categories:        Boolean
}

input Sort{
	sortBy:   String
	order:    Int
}

input MemberDetails{
  firstName:         String!
  lastName:          String
  mobile:            String
  email:             String!
  password:          String
  isActive:          Int
  profileImage:      String
  profileImagePath:  String
  username:          String
  groupId:           Int 
}

input MemberArguments{
	module:            Int
	tenantId:          Int
}

input CategoryFilter{
	categoryGroupId:      Int
	hierarchyLevel:       Int
	excludeGroup:         Boolean
	excludeParent:        Boolean
	exactLevelOnly:       Boolean
	checkEntriesPresence: Boolean
	categoryGroupSlug:    String
}

